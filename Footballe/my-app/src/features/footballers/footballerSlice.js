import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";
import axios from "axios";

const initialState = {
  loading: true,
  footballers: [],
};

export const fetchFootballers = createAsyncThunk(
  "footballers/fetchFootballers",
  async () => {
    try {
      const apiUrl =
        "https://353a-130-248-113-29.ngrok-free.app/api/v1/footballers/";

      var config = {
        method: "get",
        url: apiUrl,
        headers: {
          accept: "application/json",
          "Access-Control-Allow-Origin": "*",
        },
      };

      const response = await axios(config);
      const data = await response.data;
      //console.log(data);
      return data;
    } catch (error) {
      console.log(error);
    }
  }
);

export const footballerSlice = createSlice({
  name: "footballers",
  initialState,
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(fetchFootballers.pending, (state) => {
        state.loading = true;
      })
      .addCase(fetchFootballers.fulfilled, (state, action) => {
        state.loading = false;
        state.footballers = [];
        state.footballers.push(action.payload);
      });
  },
});

export const selectFootballers = (state) => state.footballers.footballers;

export default footballerSlice.reducer;
